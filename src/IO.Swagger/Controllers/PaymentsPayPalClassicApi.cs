/*
 * Knetik Platform API Documentation Latest
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class PaymentsPayPalClassicApiController : Controller
    { 

        /// <summary>
        /// Create a PayPal Classic billing agreement for the user
        /// </summary>
        /// <remarks>Returns the token that should be used to forward the user to PayPal so they can accept the agreement.</remarks>
        /// <param name="request">The request to create a PayPal billing agreement</param>
        /// <response code="201">Created</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("//payment/provider/paypal/classic/agreements/start")]
        [SwaggerOperation("CreateBillingAgreementUrlUsingPOST")]
        [SwaggerResponse(200, type: typeof(string))]
        public virtual IActionResult CreateBillingAgreementUrlUsingPOST([FromBody]CreateBillingAgreementRequest request)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Create a payment token for PayPal express checkout
        /// </summary>
        /// <remarks>Returns the token that should be used to forward the user to PayPal so they can complete the checkout.</remarks>
        /// <param name="request">The request to create a PayPal payment token</param>
        /// <response code="201">Created</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("//payment/provider/paypal/classic/checkout/start")]
        [SwaggerOperation("ExpressCheckoutUsingPOST")]
        [SwaggerResponse(200, type: typeof(string))]
        public virtual IActionResult ExpressCheckoutUsingPOST([FromBody]CreatePayPalPaymentRequest request)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Finalizes a billing agreement after the user has accepted through PayPal
        /// </summary>
        /// <remarks>Returns the ID of the new payment method created for the user for the billing agreement.</remarks>
        /// <param name="request">The request to finalize a PayPal billing agreement</param>
        /// <response code="201">Created</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("//payment/provider/paypal/classic/agreements/finish")]
        [SwaggerOperation("FinalizeBillingAgreementUsingPOST")]
        [SwaggerResponse(200, type: typeof(int?))]
        public virtual IActionResult FinalizeBillingAgreementUsingPOST([FromBody]FinalizeBillingAgreementRequest request)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<int?>(exampleJson)
            : default(int?);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Finalizes a payment after the user has completed checkout with PayPal
        /// </summary>
        /// <remarks>The invoice will be marked paid/failed by asynchronous IPN callback.</remarks>
        /// <param name="request">The request to finalize the payment</param>
        /// <response code="201">Created</response>
        /// <response code="204">No Content</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("//payment/provider/paypal/classic/checkout/finish")]
        [SwaggerOperation("FinalizeCheckoutUsingPOST")]
        public virtual void FinalizeCheckoutUsingPOST([FromBody]FinalizePayPalPaymentRequest request)
        { 
            throw new NotImplementedException();
        }
    }
}
